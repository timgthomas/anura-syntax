.syntax--css {

  // At-rules
  // @import '_palette';
  // ^^^^^^^
  .syntax--at-rule.syntax--control,
  .syntax--at-rule .syntax--keyword {
    color: @color-commands;
  }

  // Class selectors
  // .foo {}
  // ^^^^
  .syntax--entity.syntax--other.syntax--attribute-name {
    color: @color-keywords;
  }

  // Variables
  // > --foo: deeppink;
  //   ^^^^^
  .syntax--variable {
    color: inherit;
  }

  // Punctuation in values
  // > color: var(--foo);
  //             ^     ^
  .syntax--punctuation.syntax--bracket {
    color: @syntax-text-color;
  }

  // Global units
  // > width: 100px;
  //             ^^
  .syntax--constant .syntax--unit {
    color: inherit;
  }

  // Specific property names
  // Disabled for now; see notes on https://github.com/timgthomas/active-syntax/issues/1.
  // > cursor: pointer;
  //   ^----^
  // .syntax--property-list .syntax--entity.syntax--name.syntax--tag:not(.syntax--custom) {
  //   color: inherit;
  // }

  // Pseudoclass
  // > div:first-child() {}
  //       ^^^^^^^^^^^
  // .syntax--entity.syntax--name.syntax--tag.syntax--custom,
  .syntax--entity.syntax--other.syntax--pseudo-class {
    color: @color-variables;
  }

  // Media query keywords
  // @media screen and (min-width: 1337px) {}
  //               ^^^
  .syntax--keyword.syntax--logical {
    color: @color-commands;
  }

  // CSS-specific values
  // vector-effect: non-scaling-stroke;
  //                ^^^^^^^^^^^^^^^^^^
  .syntax--meta.syntax--property-list .syntax--property-value {
    color: @color-numbers;
  }

}
