.syntax--less {

  // Global constants
  // > @color-accent: deeppink;
  //                  ^------^
  .syntax--constant:not(.syntax--media-type) {
    color: @color-numbers;
  }

  // Pseudoclasses/pseudoelements
  // The Less parser doesn't attach anything more specific for pseudoelements.
  // > div:nth-of-type(2n + 1) {}
  //      ^^^^^^^^^^^^
  .syntax--entity + .syntax--punctuation,
  .syntax--punctuation + .syntax--custom {
    color: @color-variables;
  }

  // Global variable use
  // > @bar: @foo;
  //         ^^^^
  .syntax--punctuation {
    &.syntax--separator {
      ~ .syntax--variable,
      ~ .syntax--variable .syntax--punctuation {
        color: @color-numbers;
      }
    }
  }

  // Interpolation
  // The parser doesn't distinguish between boundaries and content, so we color the entire thing.
  // > width: calc(100vh - @{baz});
  //                       ^^^^^^
  .syntax--variable.syntax--interpolation {
    color: @color-strings;
  }

  // CSS-specific keys
  // vector-effect: non-scaling-stroke;
  // ^^^^^^^^^^^^^^
  .syntax--meta.syntax--property-list .syntax--custom,
  .syntax--meta.syntax--property-list .syntax--custom + .syntax--punctuation {
    color: @syntax-text-color;
  }

  // CSS-specific values
  // vector-effect: non-scaling-stroke;
  //                ^^^^^^^^^^^^^^^^^^
  .syntax--meta.syntax--property-list .syntax--property-value .syntax--custom {
    color: @color-numbers;
  }
  .syntax--meta.syntax--property-list .syntax--property-value .syntax--brace:not(.syntax--interpolation) {
    color: @syntax-text-color;
  }

  // TODO: Global functions; should be @cyan, but are @blue
  // > @color-border: darken(@color-accent, 25%);
  //                  ^----^

  // TODO: Scoped functions; should be @cyan, but are @green
  // > color: darken(@color-accent);
  //          ^----^

  // TODO: Calculation constants
  // > :nth-of-type(2n + 1) {}
  //                 ^

}
